services:
  postgres:
    image: postgres:16
    container_name: index_searcher_postgres
    environment:
      POSTGRES_DB: index_searcher_db
      POSTGRES_USER: a_user
      POSTGRES_PASSWORD: pass123
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U a_user -d index_searcher_db"]
      interval: 10s
      timeout: 5s
      retries: 5
  tests:
    build: .
    container_name: index_searcher_tests
    depends_on:
      - postgres
    environment:
      SMOOTH_IDF: 1
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: index_searcher_db
      DATABASE_USER: a_user
      DATABASE_PASSWORD: pass123
      PYTHONPATH: /app
    working_dir: /app
    volumes:
      - ./docs:/app/docs:ro
      - ./app:/app
      - ./tests:/app/tests:ro
    command: sh -c "sleep 2 && pytest -q tests;"
    stdin_open: false
    tty: false
    restart: "no"
  app:
    build: .
    container_name: index_searcher_app
    depends_on:
      - postgres
    environment:
      SMOOTH_IDF: 1
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: index_searcher_db
      DATABASE_USER: a_user
      DATABASE_PASSWORD: pass123
    volumes:
      - ./docs:/app/docs:ro
      - ./app:/app
    command: >
      sh -c "sleep 5 && python /app/indexer.py; rc=$$?; \
      printf '\\033[1;33m%s\\033[0m\\n' 'Po zakończeniu uzupełnienia bazy możesz odpalić wyszukiwarkę:'; \
      printf '\\033[1;32m%s\\033[0m\\n' 'docker compose run --rm app python /app/searcher.py'; \
      exit $$rc"
    stdin_open: true
    tty: true
    restart: "no"
volumes:
  pgdata: